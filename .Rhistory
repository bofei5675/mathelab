hmdbTohmdb <- data.frame()
for(pid1 in names(listOfHmdb)){
cid1 <- grep('RAMP_C',listOfHmdb[[pid1]],value = T)
for(pid2 in names(listOfHmdb)){
cid2 <- grep('RAMP_C',listOfHmdb[[pid2]],value = T)
print(paste0(pid1,':',pid2))
if(length(cid1) >0 & length(cid2) >0){
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = length(intersect(cid1,cid2)))
hmdbTohmdb <- rbind(hmdbTohmdb,df)
} else{
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = 0)
hmdbTohmdb <- rbind(hmdbTohmdb,df)
}
}
}
hmdbTohmdb <- data.frame()
for(pid1 in names(listOfHmdb)){
cid1 <- grep('RAMP_C',listOfHmdb[[pid1]],value = T)
for(pid2 in names(listOfHmdb)){
cid2 <- grep('RAMP_C',listOfHmdb[[pid2]],value = T)
print(paste0(pid1,':',pid2))
if(length(cid1) >0 & length(cid2) >0){
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = length(intersect(cid1,cid2))/length(union(cid1,cid2)))
hmdbTohmdb <- rbind(hmdbTohmdb,df)
} else{
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = 0)
hmdbTohmdb <- rbind(hmdbTohmdb,df)
}
}
}
hmdbToOther <- data.frame()
for(pid1 in names(listOfHmdb)){
cid1 <- grep('RAMP_C',listOfHmdb[[pid1]],value = T)
for(pid2 in names(listOfHmdb)){
cid2 <- grep('RAMP_C',listOfHmdb[[pid2]],value = T)
print(paste0(pid1,':',pid2))
if(length(cid1) >0 & length(cid2) >0){
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = length(intersect(cid1,cid2))/length(union(cid1,cid2)))
hmdbToOther <- rbind(hmdbToOther,df)
} else{
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = 0)
hmdbToOther <- rbind(hmdbToOther,df)
}
}
for(pid2 in names(listOfKegg)){
cid2 <- grep('RAMP_C',listOfKegg[[pid2]],value = T)
print(paste0(pid1,':',pid2))
if(length(cid1) >0 & length(cid2) >0){
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = length(intersect(cid1,cid2))/length(union(cid1,cid2)))
hmdbToOther <- rbind(hmdbToOther,df)
} else{
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = 0)
hmdbToOther <- rbind(hmdbToOther,df)
}
}
for(pid2 in names(listOfWiki)){
cid2 <- grep('RAMP_C',listOfWiki[[pid2]],value = T)
print(paste0(pid1,':',pid2))
if(length(cid1) >0 & length(cid2) >0){
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = length(intersect(cid1,cid2))/length(union(cid1,cid2)))
hmdbToOther <- rbind(hmdbToOther,df)
} else{
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = 0)
hmdbToOther <- rbind(hmdbToOther,df)
}
}
for(pid2 in names(listOfReac)){
cid2 <- grep('RAMP_C',listOfReac[[pid2]],value = T)
print(paste0(pid1,':',pid2))
if(length(cid1) >0 & length(cid2) >0){
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = length(intersect(cid1,cid2))/length(union(cid1,cid2)))
hmdbToOther <- rbind(hmdbToOther,df)
} else{
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = 0)
hmdbToOther <- rbind(hmdbToOther,df)
}
}
}
View(hmdbToOther)
hmdbToOther <- data.frame()
for(pid1 in names(listOfHmdb)){
cid1 <- grep('RAMP_C',listOfHmdb[[pid1]],value = T)
for(pid2 in names(listOfHmdb)){
cid2 <- grep('RAMP_C',listOfHmdb[[pid2]],value = T)
print(paste0(pid1,':',pid2))
if(length(cid1) >0 & length(cid2) >0){
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = length(intersect(cid1,cid2))/length(union(cid1,cid2)))
hmdbToOther <- rbind(hmdbToOther,df)
} else{
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = 0)
hmdbToOther <- rbind(hmdbToOther,df)
}
}
for(pid2 in names(listOfKegg)){
cid2 <- grep('RAMP_C',listOfKegg[[pid2]],value = T)
print(paste0(pid1,':',pid2))
if(length(cid1) >0 & length(cid2) >0){
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = length(intersect(cid1,cid2))/length(union(cid1,cid2)))
hmdbToOther <- rbind(hmdbToOther,df)
} else{
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = 0)
hmdbToOther <- rbind(hmdbToOther,df)
}
}
for(pid2 in names(listOfWiki)){
cid2 <- grep('RAMP_C',listOfWiki[[pid2]],value = T)
print(paste0(pid1,':',pid2))
if(length(cid1) >0 & length(cid2) >0){
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = length(intersect(cid1,cid2))/length(union(cid1,cid2)))
hmdbToOther <- rbind(hmdbToOther,df)
} else{
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = 0)
hmdbToOther <- rbind(hmdbToOther,df)
}
}
for(pid2 in names(listOfReac)){
cid2 <- grep('RAMP_C',listOfReac[[pid2]],value = T)
print(paste0(pid1,':',pid2))
if(length(cid1) >0 & length(cid2) >0){
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = length(intersect(cid1,cid2))/length(union(cid1,cid2)))
hmdbToOther <- rbind(hmdbToOther,df)
} else{
df <- data.frame(pathway1=pid1,
pathway2 = pid2,
overlap = 0)
hmdbToOther <- rbind(hmdbToOther,df)
}
}
}
library(xlsx)
hmdbdf <- read.xlsx('Compiled_results.xlsx')
hmdbdf <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 1)
setwd("~/RProject/matheLab")
hmdbdf <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 1)
View(hmdbdf)
hmdbdf <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 0)
hmdbdf <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 2)
hmdbdf2 <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 2)
hmdbdf3 <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 3)
hmdbdf4 <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 4)
hmdbdf1 <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 1)
hmdbbg <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 5)
View(hmdbdf1)
hmdbid1 <- hmdbdf1$HMDB.ID[hmdbdf1$HMDB.ID != "Not Found"]
hmdbid1 <- unfactor(hmdbdf1$HMDB.ID[hmdbdf1$HMDB.ID != "Not Found"])
hmdbid1 <- as.character(hmdbdf1$HMDB.ID[hmdbdf1$HMDB.ID != "Not Found"])
hmdbid1 <- unique(as.character(hmdbdf1$HMDB.ID[hmdbdf1$HMDB.ID != "Not Found"]))
con <- dbConnect(MySQL(),
user = 'root',
dbname='mathelabramp',
password = 'Ehe131224',
host = 'localhost')
View(hmdbdf1)
hmdbid1 <- sapply(hmdbid1,shQuote)
hmdbid1 <- paste(hmdbid1,collapse = ',')
query <- paste0("select * from source where sourceId in (",hmdbid1,");")
query <- paste0("select * from source where sourceId in (",hmdbid1,");")
source <- dbGetQuery(con,query)
View(source)
rampId <- unique(source$rampId)
rampId <- sapply(rampId,shQuote)
rampId <- paste(rampId,collapse = ',')
query2 <- paste0("select * from analytehaspathway where rampId in (",
rampId,");")
pathway <- dbGetQuery(con,query2)
View(pathway)
query2
pathway <- dbGetQuery(con,query2)
View(pathway)
View(source)
query3 <- paste0("select * from analytehaspathway where rampId in (",
rampId,");")
query2 <- paste0("select * from source where rampId in (",rampId,");")
source2 <- dbGetQuery(con,query2)
View(source2)
sourceId <- source2$sourceId
sourceId <- unqiue(source2$sourceId)
sourceId <- unique(source2$sourceId)
sourceId <- sapply(sourceId,shQuote)
sourceId <- paste(sourceId,collapse = ',')
query3 <- paste0("select * from source where sourceid in (",sourceId,");")
source3 <- dbGetQuery(con,query3)
View(source3)
View(hmdbdf1)
View(source)
View(source3)
query <- paste0("select * from source where sourceId in (",hmdbid1,");")
source <- dbGetQuery(con,query)
rampId <- unique(source$rampId)
rampId <- sapply(rampId,shQuote)
rampId <- paste(rampId,collapse = ',')
pathway <- dbGetQuery(con,query2)
query2 <- paste0("select * from analytehaspathway where rampId in (",rampId,");")
pathway <- dbGetQuery(con,query2)
pathway <- dbGetQuery(con,query2)
View(pathway)
pid <- unique(pathway$pathwayRampId)
pid <- paste(pid,collapse = ',')
query3 <- paste("select * from pathway where rampId in (",pid,");")
pname <- dbGetQuery(con,query3)
query3 <- paste("select * from pathway where pathwayrampId in (",pid,");")
pname <- dbGetQuery(con,query3)
query3
pid <- unique(pathway$pathwayRampId)
pid <- sapply(pid,shQuote)
pid <- paste(pid,collapse = ',')
query3 <- paste("select * from pathway where pathwayrampId in (",pid,");")
pname <- dbGetQuery(con,query3)
View(pname)
result <- merge(pname,pathway)
View(result)
result2 <- merge(result,source)
View(result2)
View(source)
result2 <- merge(result,source,by.x = rampId,by.y = rampId)
result2 <- merge(result,source,by.x = 'rampId',by.y = 'rampId')
View(result2)
result2 <- result2[,c(6,4,3,7)]
View(result2)
rampFindPathway<- function(hmdbid1){
hmdbid1 <- sapply(hmdbid1,shQuote)
hmdbid1 <- paste(hmdbid1,collapse = ',')
query <- paste0("select * from source where sourceId in (",hmdbid1,");")
source <- dbGetQuery(con,query)
rampId <- unique(source$rampId)
rampId <- sapply(rampId,shQuote)
rampId <- paste(rampId,collapse = ',')
query2 <- paste0("select * from analytehaspathway where rampId in (",rampId,");")
pathway <- dbGetQuery(con,query2)
pid <- unique(pathway$pathwayRampId)
pid <- sapply(pid,shQuote)
pid <- paste(pid,collapse = ',')
query3 <- paste("select * from pathway where pathwayrampId in (",pid,");")
pname <- dbGetQuery(con,query3)
result <- merge(pname,pathway)
result2 <- merge(result,source,by.x = 'rampId',by.y = 'rampId')
result2 <- result2[,c(6,4,3,7)]
}
result <- rampFindPathway(hmdbid1)
hmdbid1 <- unique(as.character(hmdbdf1$HMDB.ID[hmdbdf1$HMDB.ID != "Not Found"]))
result <- rampFindPathway(hmdbid1)
View(result)
write.xlsx(result,sheetName = 'Treated_DMEM')
?write.xlsx
write.xlsx(result,file = "pathways.xlsx",sheetName = 'Treated_DMEM',row.names = F)
setwd("~/RProject/matheLab")
write.xlsx(result,file = "pathways.xlsx",sheetName = 'Treated_DMEM',row.names = F)
hmdbid1 <- unique(as.character(hmdbdf2$HMDB.ID[hmdbdf1$HMDB.ID != "Not Found"]))
result <- rampFindPathway(hmdbid1)
hmdbid1 <- unique(as.character(hmdbdf2$HMDB.ID[hmdbdf2$HMDB.ID != "Not Found"]))
result <- rampFindPathway(hmdbid1)
hmdbid1 <- unique(as.character(hmdbdf2$HMDB.ID[hmdbdf2$HMDB.ID != "Not Found"]))
rampFindPathway<- function(hmdbid1){
hmdbid1 <- sapply(hmdbid1,shQuote)
hmdbid1 <- paste(hmdbid1,collapse = ',')
query <- paste0("select * from source where sourceId in (",hmdbid1,");")
source <- dbGetQuery(con,query)
rampId <- unique(source$rampId)
return(rampId)
rampId <- sapply(rampId,shQuote)
rampId <- paste(rampId,collapse = ',')
query2 <- paste0("select * from analytehaspathway where rampId in (",rampId,");")
pathway <- dbGetQuery(con,query2)
pid <- unique(pathway$pathwayRampId)
pid <- sapply(pid,shQuote)
pid <- paste(pid,collapse = ',')
query3 <- paste("select * from pathway where pathwayrampId in (",pid,");")
pname <- dbGetQuery(con,query3)
result <- merge(pname,pathway)
result2 <- merge(result,source,by.x = 'rampId',by.y = 'rampId')
result2 <- result2[,c(6,4,3,7)]
}
result <- rampFindPathway(hmdbid1)
rampFindPathway<- function(hmdbid1){
hmdbid1 <- sapply(hmdbid1,shQuote)
hmdbid1 <- paste(hmdbid1,collapse = ',')
query <- paste0("select * from source where sourceId in (",hmdbid1,");")
source <- dbGetQuery(con,query)
rampId <- unique(source$rampId)
#return(rampId)
rampId <- sapply(rampId,shQuote)
rampId <- paste(rampId,collapse = ',')
query2 <- paste0("select * from analytehaspathway where rampId in (",rampId,");")
pathway <- dbGetQuery(con,query2)
return(pathway)
pid <- unique(pathway$pathwayRampId)
pid <- sapply(pid,shQuote)
pid <- paste(pid,collapse = ',')
query3 <- paste("select * from pathway where pathwayrampId in (",pid,");")
pname <- dbGetQuery(con,query3)
result <- merge(pname,pathway)
result2 <- merge(result,source,by.x = 'rampId',by.y = 'rampId')
result2 <- result2[,c(6,4,3,7)]
}
result <- rampFindPathway(hmdbid1)
View(result)
write.xlsx(result,file = "pathways.xlsx",sheetName = 'Treated_STDP',row.names = F)
hmdbid1 <- unique(as.character(hmdbdf3$HMDB.ID[hmdbdf3$HMDB.ID != "Not Found"]))
result <- rampFindPathway(hmdbid1)
View(result)
rampFindPathway<- function(hmdbid1){
hmdbid1 <- sapply(hmdbid1,shQuote)
hmdbid1 <- paste(hmdbid1,collapse = ',')
query <- paste0("select * from source where sourceId in (",hmdbid1,");")
source <- dbGetQuery(con,query)
rampId <- unique(source$rampId)
#return(rampId)
rampId <- sapply(rampId,shQuote)
rampId <- paste(rampId,collapse = ',')
query2 <- paste0("select * from analytehaspathway where rampId in (",rampId,");")
pathway <- dbGetQuery(con,query2)
#return(pathway)
pid <- unique(pathway$pathwayRampId)
pid <- sapply(pid,shQuote)
pid <- paste(pid,collapse = ',')
query3 <- paste("select * from pathway where pathwayrampId in (",pid,");")
pname <- dbGetQuery(con,query3)
result <- merge(pname,pathway)
result2 <- merge(result,source,by.x = 'rampId',by.y = 'rampId')
result2 <- result2[,c(6,4,3,7)]
}
hmdbid1 <- unique(as.character(hmdbdf3$HMDB.ID[hmdbdf3$HMDB.ID != "Not Found"]))
result <- rampFindPathway(hmdbid1)
View(result)
write.xlsx(result,file = "pathways.xlsx",sheetName = 'Untreated_DMEM',row.names = F)
hmdbid1 <- unique(as.character(hmdbdf4$HMDB.ID[hmdbdf4$HMDB.ID != "Not Found"]))
result <- rampFindPathway(hmdbid1)
View(result)
write.xlsx(result,file = "pathways.xlsx",sheetName = 'Untreated_STDP',row.names = F)
hmdbid1 <- unique(as.character(hmdbdf5$HMDB.ID[hmdbdf5$HMDB.ID != "Not Found"]))
result <- rampFindPathway(hmdbid1)
hmdbid1 <- unique(as.character(hmdbbg$HMDB.ID[hmdbbg$HMDB.ID != "Not Found"]))
result <- rampFindPathway(hmdbid1)
View(result)
write.xlsx(result,file = "pathways.xlsx",sheetName = 'Full',row.names = F)
hmdb[[1]] <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 1)
hmdb[[2]] <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 2)
hmdb[[3]] <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 3)
hmdb[[4]] <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 4)
hmdb[[5]] <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 5)
hmdb<- list()
hmdb[[1]] <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 1)
hmdb[[2]] <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 2)
hmdb[[3]] <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 3)
hmdb[[4]] <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 4)
hmdb[[5]] <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 5)
for(i in 1:5){
hmdbid1 <- unique(as.character(hmdb[[i]]$HMDB.ID[hmdb[[i]]$HMDB.ID != "Not Found"]))
result <- rampFindPathway(hmdbid1)
}
hmdb<- list()
hmdb[[1]] <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 1)
hmdb[[2]] <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 2)
hmdb[[3]] <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 3)
hmdb[[4]] <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 4)
hmdb[[5]] <- read.xlsx('Compiled_results.xlsx',
sheetIndex = 5)
hmdb[[1]]
hmdbid1 <- unique(as.character(hmdb[[i]]$HMDB.ID[hmdb[[i]]$HMDB.ID != "Not Found"]))
result <- rampFindPathway(hmdbid1)
hmdbid1 <- unique(as.character(hmdb[[i]]$HMDB.ID[hmdb[[i]]$HMDB.ID != "Not Found"]))
result <- rampFindPathway(hmdbid1)
hmdbid1 <- unique(as.character(hmdb[[1]]$HMDB.ID[hmdb[[1]]$HMDB.ID != "Not Found"]))
result <- rampFindPathway(hmdbid1)
for(i in 1:5){
try(
hmdbid1 <- unique(as.character(hmdb[[i]]$HMDB.ID[hmdb[[i]]$HMDB.ID != "Not Found"]))
)
result <- rampFindPathway(hmdbid1)
}
rampFindPathway<- function(hmdb){
hmdbid1 <- unique(as.character(hmdb$HMDB.ID[hmdb$HMDB.ID != "Not Found"]))
hmdbid1 <- sapply(hmdbid1,shQuote)
hmdbid1 <- paste(hmdbid1,collapse = ',')
query <- paste0("select * from source where sourceId in (",hmdbid1,");")
source <- dbGetQuery(con,query)
rampId <- unique(source$rampId)
#return(rampId)
rampId <- sapply(rampId,shQuote)
rampId <- paste(rampId,collapse = ',')
query2 <- paste0("select * from analytehaspathway where rampId in (",rampId,");")
pathway <- dbGetQuery(con,query2)
#return(pathway)
pid <- unique(pathway$pathwayRampId)
pid <- sapply(pid,shQuote)
pid <- paste(pid,collapse = ',')
query3 <- paste("select * from pathway where pathwayrampId in (",pid,");")
pname <- dbGetQuery(con,query3)
result <- merge(pname,pathway)
result2 <- merge(result,source,by.x = 'rampId',by.y = 'rampId')
result2 <- result2[,c(6,4,3,7)]
}
for(i in 1:5){
result <- rampFindPathway(hmdb[[i]])
}
for(i in 1:5){
print(i)
result <- rampFindPathway(hmdb[[i]])
}
for(i in 1:5){
print(i)
try(
result[[i]] <- rampFindPathway(hmdb[[i]])
)
}
result <- rampFindPathway(hmdb[[1]])
result <- rampFindPathway(hmdb[[3]])
result1 <- rampFindPathway(hmdb[[1]])
result3 <- rampFindPathway(hmdb[[3]])
result4 <- rampFindPathway(hmdb[[4]])
result5 <- rampFindPathway(hmdb[[5]])
wb <- createWorkbook()
sheetName <- c("Treated_DMEM","Treated_STDP","Untreated_DMEM","Untreated_STDP","Full")
result[[1]] <- rampFindPathway(hmdb[[1]])
result[[2]] <- rampFindPathway(hmdb[[3]])
result[[3]] <- rampFindPathway(hmdb[[4]])
result[[4]] <- rampFindPathway(hmdb[[5]])
result<- list()
result[[1]] <- rampFindPathway(hmdb[[1]])
result[[2]] <- rampFindPathway(hmdb[[3]])
result[[3]] <- rampFindPathway(hmdb[[4]])
result[[4]] <- rampFindPathway(hmdb[[5]])
for(name in sheetName){
createSheet(wb,name)
}
sheet <- list()
for(name in sheetName){
sheet[[name]] <-createSheet(wb,name)
}
result<- list()
result[[1]] <- rampFindPathway(hmdb[[1]])
result[[2]] <- rampFindPathway(hmdb[[3]])
result[[3]] <- rampFindPathway(hmdb[[4]])
result[[4]] <- rampFindPathway(hmdb[[5]])
wb <- createWorkbook()
sheetName <- c("Treated_DMEM","Untreated_DMEM","Untreated_STDP","Full")
i<- 1
sheet <- list()
for(name in sheetName){
sheet[[name]] <-createSheet(wb,name)
}
sheetIndex = 5)
sheet[[1]]
sheet[[2]]
sheet[[3]]
sheet[[4]]
sheet[[5]]
for(i in 1:4){
addDataFrame(result[[i]],sheet = sheet[[i]],startColumn = 1,row.names = F)
}
saveWorkbook(wb,"pathways.xlsx")
