))
}
return(output)
}
finderSynonymAndSource <- function(ids,db){
ids <- sapply(ids,shQuote)
ids <- paste(ids,collapse = ",")
query1 <- paste0("select * from analytesynonym where rampId in (",ids,");")
query2 <- paste0("select * from source where rampId in (",ids,");")
synonym <- dbGetQuery(con,query1)
source <- dbGetQuery(con,query2)
df <- merge(synonym,source)
df <-  unique(df[,c(3,4,5)])
}
hmdbrampId <- finderSynonymAndSource(resultHMDB$metabolites,
db = "hmdb")
View(hmdbrampId)
finderPathways <- function(SourceId,rampIdHasPathway){
hmdbSourceId <- unique(SourceId$V1)
hmdbSourceId <- sapply(hmdbSourceId,shQuote)
hmdbSourceId <- paste(hmdbSourceId,collapse = ",")
query <- paste0("select * from source where sourceId in (",hmdbSourceId,");")
df <- dbGetQuery(con,query)
#return(df)
rampId <- intersect(df$rampId,rampIdHasPathway)
}
finderPathways2 <- function(Ids){
Ids <- unique(Ids)
Ids <- sapply(Ids,shQuote)
Ids <- paste(Ids,collapse = ",")
query <- paste0("select * from analytehasPathway where rampId in (",Ids,");")
df <- dbGetQuery(con,query)
}
finderPathways3 <- function(dfOfIds){
cid <- unique(dfOfIds$rampId)
pid <- unique(dfOfIds$pathwayRampId)
pathSource <- c("hmdb","kegg","wiki","reactome")
output <- data.frame(metabolites = NULL,totpathways = NULL,hmdb=NULL,
kegg =NULL,wiki=NULL,reac = NULL)
for(id in cid){
print(id)
pathways <- dfOfIds[dfOfIds$rampId == id,]
numOfPathway <- vector()
for(db in pathSource){
numOfPathway <- c(numOfPathway,nrow(unique(pathways[pathways$type == db,])))
# print(pathways[pathways$type == db,])
# Sys.sleep(3)
}
output <- rbind(output,data.frame(
metabolites = id,totpathways = nrow(pathways),
hmdb = numOfPathway[1],
kegg = numOfPathway[2],
wiki = numOfPathway[3],
reac = numOfPathway[4]
))
}
return(output)
}
finderSynonymAndSource <- function(ids,db){
ids <- sapply(ids,shQuote)
ids <- paste(ids,collapse = ",")
query1 <- paste0("select * from analytesynonym where rampId in (",ids,");")
query2 <- paste0("select * from source where rampId in (",ids,");")
synonym <- dbGetQuery(con,query1)
source <- dbGetQuery(con,query2)
df <- merge(synonym,source)
df <- df[df$IDtype == db,]
df <-  unique(df[,c(3,4,5)])
}
hmdbrampId <- finderSynonymAndSource(resultHMDB$metabolites,
db = "hmdb")
View(hmdbrampId)
finderPathways <- function(SourceId,rampIdHasPathway){
hmdbSourceId <- unique(SourceId$V1)
hmdbSourceId <- sapply(hmdbSourceId,shQuote)
hmdbSourceId <- paste(hmdbSourceId,collapse = ",")
query <- paste0("select * from source where sourceId in (",hmdbSourceId,");")
df <- dbGetQuery(con,query)
#return(df)
rampId <- intersect(df$rampId,rampIdHasPathway)
}
finderPathways2 <- function(Ids){
Ids <- unique(Ids)
Ids <- sapply(Ids,shQuote)
Ids <- paste(Ids,collapse = ",")
query <- paste0("select * from analytehasPathway where rampId in (",Ids,");")
df <- dbGetQuery(con,query)
}
finderPathways3 <- function(dfOfIds){
cid <- unique(dfOfIds$rampId)
pid <- unique(dfOfIds$pathwayRampId)
pathSource <- c("hmdb","kegg","wiki","reactome")
output <- data.frame(metabolites = NULL,totpathways = NULL,hmdb=NULL,
kegg =NULL,wiki=NULL,reac = NULL)
for(id in cid){
print(id)
pathways <- dfOfIds[dfOfIds$rampId == id,]
numOfPathway <- vector()
for(db in pathSource){
numOfPathway <- c(numOfPathway,nrow(unique(pathways[pathways$type == db,])))
# print(pathways[pathways$type == db,])
# Sys.sleep(3)
}
output <- rbind(output,data.frame(
metabolites = id,totpathways = nrow(pathways),
hmdb = numOfPathway[1],
kegg = numOfPathway[2],
wiki = numOfPathway[3],
reac = numOfPathway[4]
))
}
return(output)
}
finderSynonymAndSource <- function(ids,db){
ids <- sapply(ids,shQuote)
ids <- paste(ids,collapse = ",")
query1 <- paste0("select * from analytesynonym where rampId in (",ids,");")
query2 <- paste0("select * from source where rampId in (",ids,");")
synonym <- dbGetQuery(con,query1)
source <- dbGetQuery(con,query2)
df <- merge(synonym,source)
df <- df[df$IDtype == db,]
df <-  unique(df[,c(1,3,4,5)])
}
hmdbrampId <- finderSynonymAndSource(resultHMDB$metabolites,
db = "hmdb")
View(hmdbrampId)
library(reshape2)
df <- melt(hmdbrampId, id.vars = "rampId")
View(df)
df <- melt(hmdbrampId, id.vars = "rampId",
measure.vars = c("Synonym","sourceId"))
df <- melt(hmdbrampId, id.vars = "rampId",
measure.vars = c("sourceId"))
df <- unique(df)
View(df)
hmdbrampId <- finderSynonymAndSource(rampIdForHMDB,
db = "hmdb")
View(hmdbrampId)
df <- melt(hmdbrampId, id.vars = "rampId",
measure.vars = c("sourceId"))
df <- unique(df)
View(df)
View(df)
View(kegg)
View(reac)
View(wiki)
View(hmdbrampId)
save.image(file = "pathwaysInEachMetabolites.RData")
setwd("~/RProject/matheLab/paperBarPlot/outputBarPlot")
library(plotly)
plot.hmdb <- resultHMDB[order(resultHMDB$totpathways,decreasing = T),]
m <- list(
l = 100,
r = 100,
t = 100,
b = 100
)
h <- 1000
w <- 1000
p_hmdb <- plot_ly(x = 1:length(plot.hmdb$totpathways),
y = plot.hmdb$totpathways,
type = "bar",
height = h,
width = w) %>%
layout(title = "HMDB metabolites vs. Pathways",
margin = m,
font = list(
size = 24
),
yaxis = list(
title = "Number of pathways metabolites are involved in",
font = list(
size = 24
)
),
xaxis = list(
title = "Total 2508 unique metabolites have pathways",
showticklabels = FALSE,
font = list(
size = 24
)
))
for(i in 1:5){
df <- plot.data[[1]]
p_hmdb <- p_hmdb %>%
add_annotations(
text = df$Synonym[i],
x = i,
y = df$totpathways[i],
ax = 20,
ay = 20,
xanchor = "left",
yanchor = "bottom"
)
}
p_hmdb
plot.kegg <- resultKEGG[order(resultKEGG$totpathways,decreasing = T),]
p_kegg <- plot_ly(x = 1:length(plot.kegg$totpathways),
y = plot.kegg$totpathways,
type = "bar",
height = h,
width = w) %>%
layout(title = "KEGG metabolites vs. Pathways",
margin = m,
font = list(
size = 24
),
yaxis = list(
title = "Numbers of pathways metabolites are involved in",
font = list(
size = 24
)
),
xaxis = list(
title = "Total 3115 unique metabolites have pathways",
showticklabels = FALSE,
font = list(
size = 24
)
))
for(i in 1:5){
df <- plot.data[[2]]
p_kegg <- p_kegg %>%
add_annotations(
text = df$Synonym[i],
x = i,
y = df$totpathways[i],
ax = 20,
ay = 20,
xanchor = "left",
yanchor = "bottom"
)
}
p_kegg
plot.wiki <- resultWIKI[order(resultWIKI$totpathways,decreasing = T),]
p_wiki <- plot_ly(x = 1:length(plot.wiki$totpathways),
y = plot.wiki$totpathways,
type = "bar",
height = h,
width = w) %>%
layout(title = "Wikipathways metabolites vs. Pathways",
margin = m,
font = list(
size = 24
),
yaxis = list(
title = "Numbers of pathways metabolites are involved in",
font = list(
size = 24
)
),
xaxis = list(
title = "Total 1236 unique metabolites have pathways",
showticklabels = FALSE,
font = list(
size = 24
)
))
for(i in 1:5){
df <- plot.data[[3]]
p_wiki <- p_wiki %>%
add_annotations(
text = df$Synonym[i],
x = i,
y = df$totpathways[i],
ax = 20,
ay = 20,
xanchor = "left",
yanchor = "bottom"
)
}
p_wiki
plot.reac <- resultREAC[order(resultREAC$totpathways,decreasing = T),]
p_reac <- plot_ly(x = 1:length(plot.reac$totpathways),
y = plot.reac$totpathways,
type = "bar",
height = h,
width = w) %>%
layout(title = "Reactome metabolites vs. Pathways",
margin = m,
font = list(
size = 24
),
yaxis = list(
title = "Numbers of pathways metabolites are involved in",
font = list(
size = 24
)
),
xaxis = list(
title = "Total 1781 unique metabolites have pathways",
showticklabels = FALSE,
font = list(
size = 24
)
))
for(i in 1:5){
df <- plot.data[[4]]
p_reac <- p_reac %>%
add_annotations(
text = df$Synonym[i],
x = i,
y = df$totpathways[i],
ax = 20,
ay = 20,
xanchor = "left",
yanchor = "bottom"
)
}
p_reac
export(p_hmdb,"hmdbMetabolitesPathways.png")
export(p_kegg,"keggMetabolitesPathways.png")
export(p_wiki,"wikiMetabolitesPathways.png")
export(p_reac,"reacMetabolitesPathways.png")
plot.data <- list()
plot.data[[1]] <- plot.hmdb
plot.data[[2]] <- plot.kegg
plot.data[[3]] <- plot.wiki
plot.data[[4]] <- plot.reac
for(i in 1:4){
rampId <- as.character(unique(plot.data[[i]]$metabolites))
rampId <- sapply(rampId,shQuote)
rampId <- paste(rampId,collapse = ",")
query <- paste("select * from analytesynonym where rampId in(",rampId,") group by rampId;")
synonymdf1 <- dbGetQuery(con,query)
plot.data[[i]] <- merge(plot.data[[i]],synonymdf1[,1:2],by.x = "metabolites",by.y="rampId")
}
database <- c("hmdb",'kegg','wiki','reactome')
for(i in 1:4){
plot.data[[i]] <- plot.data[[i]][order(plot.data[[i]]$totpathways,decreasing = T),]
}
for(i in 1:4){
write.csv(plot.data[[i]],
file = paste0(database[i],"promiscuous.csv"),
row.names = F)
}
View(plot.data[[3]])
library(plotly)
plot.hmdb <- resultHMDB[order(resultHMDB$totpathways,decreasing = T),]
m <- list(
l = 100,
r = 100,
t = 100,
b = 100
)
h <- 1000
w <- 1000
p_hmdb <- plot_ly(x = 1:length(plot.hmdb$totpathways),
y = plot.hmdb$totpathways,
type = "bar",
height = h,
width = w) %>%
layout(title = "HMDB metabolites vs. Pathways",
margin = m,
font = list(
size = 24
),
yaxis = list(
title = "Number of pathways metabolites are involved in",
font = list(
size = 24
)
),
xaxis = list(
title = "Total 2508 unique metabolites have pathways",
showticklabels = FALSE,
font = list(
size = 24
)
))
for(i in 1:5){
df <- plot.data[[1]]
p_hmdb <- p_hmdb %>%
add_annotations(
text = df$Synonym[i],
x = i,
y = df$totpathways[i],
ax = 20,
ay = 20,
xanchor = "left",
yanchor = "bottom"
)
}
p_hmdb
plot.kegg <- resultKEGG[order(resultKEGG$totpathways,decreasing = T),]
p_kegg <- plot_ly(x = 1:length(plot.kegg$totpathways),
y = plot.kegg$totpathways,
type = "bar",
height = h,
width = w) %>%
layout(title = "KEGG metabolites vs. Pathways",
margin = m,
font = list(
size = 24
),
yaxis = list(
title = "Numbers of pathways metabolites are involved in",
font = list(
size = 24
)
),
xaxis = list(
title = "Total 3115 unique metabolites have pathways",
showticklabels = FALSE,
font = list(
size = 24
)
))
for(i in 1:5){
df <- plot.data[[2]]
p_kegg <- p_kegg %>%
add_annotations(
text = df$Synonym[i],
x = i,
y = df$totpathways[i],
ax = 20,
ay = 20,
xanchor = "left",
yanchor = "bottom"
)
}
p_kegg
plot.wiki <- resultWIKI[order(resultWIKI$totpathways,decreasing = T),]
p_wiki <- plot_ly(x = 1:length(plot.wiki$totpathways),
y = plot.wiki$totpathways,
type = "bar",
height = h,
width = w) %>%
layout(title = "Wikipathways metabolites vs. Pathways",
margin = m,
font = list(
size = 24
),
yaxis = list(
title = "Numbers of pathways metabolites are involved in",
font = list(
size = 24
)
),
xaxis = list(
title = "Total 1236 unique metabolites have pathways",
showticklabels = FALSE,
font = list(
size = 24
)
))
for(i in 1:5){
df <- plot.data[[3]]
p_wiki <- p_wiki %>%
add_annotations(
text = df$Synonym[i],
x = i,
y = df$totpathways[i],
ax = 20,
ay = 20,
xanchor = "left",
yanchor = "bottom"
)
}
p_wiki
plot.reac <- resultREAC[order(resultREAC$totpathways,decreasing = T),]
p_reac <- plot_ly(x = 1:length(plot.reac$totpathways),
y = plot.reac$totpathways,
type = "bar",
height = h,
width = w) %>%
layout(title = "Reactome metabolites vs. Pathways",
margin = m,
font = list(
size = 24
),
yaxis = list(
title = "Numbers of pathways metabolites are involved in",
font = list(
size = 24
)
),
xaxis = list(
title = "Total 1781 unique metabolites have pathways",
showticklabels = FALSE,
font = list(
size = 24
)
))
for(i in 1:5){
df <- plot.data[[4]]
p_reac <- p_reac %>%
add_annotations(
text = df$Synonym[i],
x = i,
y = df$totpathways[i],
ax = 20,
ay = 20,
xanchor = "left",
yanchor = "bottom"
)
}
p_reac
export(p_hmdb,"hmdbMetabolitesPathways.png")
export(p_kegg,"keggMetabolitesPathways.png")
export(p_wiki,"wikiMetabolitesPathways.png")
export(p_reac,"reacMetabolitesPathways.png")
nrow(resultHMDB[resultHMDB$totpathways == 1,])
nrow(resultKEGG[resultKEGG$totpathways == 1,])
nrow(resultWIKI[resultWIKI$totpathways == 1,])
nrow(resultREAC[resultREAC$totpathways == 1,])
synonym <- dbGetQuery(con,"select * from analyteSynonym;")
df <- data.frame(synonym = synonym$Synonym)
freq <- table(unlist(df))
freq2 <- data.frame(freq)
View(freq2)
